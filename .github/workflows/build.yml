name: Build CI

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths-ignore:
      - '**.md'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - '**.md'

permissions:
  contents: read
  checks: write
  id-token: write

env:
  JAVA_VERSION: "17"
  JAVA_DISTR: 'corretto'

jobs:
  test:
    name: "🤖 Unit Tests"
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: ${{ env.JAVA_DISTR }}
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup gradle
        uses: gradle/gradle-build-action@v2.5.1

      - name: Run tests
        run: ./gradlew allTests --stacktrace

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: '**/build/test-results/test*/TEST-*.xml'

  android-lint:
    name: "🔍 Android Lint"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: ${{ env.JAVA_DISTR }}
          java-version: ${{ env.JAVA_VERSION }}

      - name: Increase gradle daemon memory
        run: "echo \"org.gradle.jvmargs=-Xmx4096m\" >> gradle.properties"

      - name: Setup gradle
        uses: gradle/gradle-build-action@v2.5.1

      - name: Lint sources
        run: ./gradlew androidApp:lint --stacktrace

      - name: Generate GitHub annotations
        uses: yutailang0119/action-android-lint@v3
        with:
          report-path: '**/build/reports/*.xml'

  assemble-apk:
    name: "📦 Assemble Android APKs"
    needs:
      - test
      - android-lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: ${{ env.JAVA_DISTR }}
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup gradle
        uses: gradle/gradle-build-action@v2.5.1

      - name: Assemble debug APKs
        run: ./gradlew androidApp:assembleDebug --stacktrace

      - name: Upload APKs
        uses: actions/upload-artifact@v3
        with:
          name: APKs
          path: androidApp/build/outputs/apk/**/androidApp-debug.apk

  package-desktop:
    name: "📦 Package Desktop"
    needs:
      - test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: ${{ env.JAVA_DISTR }}
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup gradle
        uses: gradle/gradle-build-action@v2.5.1

      - name: Package distribution for current OS
        run: ./gradlew packageDistributionForCurrentOS --stacktrace

      - name: Upload distributions
        uses: actions/upload-artifact@v3
        with:
          name: Desktop
          path: desktopApp/build/compose/binaries/main/**/*
